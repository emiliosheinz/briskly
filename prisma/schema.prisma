generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  decks         Deck[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Visibility {
  Public
  Private
  WithLink
}

model Deck {
  id          String      @id @default(cuid())
  title       String
  description String
  visibility  Visibility  @default(Public)
  ownerId     String
  image       String      @unique
  user        User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  topic       DeckTopic[]
  cards       Card[]
}

model DeckTopic {
  deckId  String
  deck    Deck   @relation(fields: [deckId], references: [id], onDelete: Cascade)
  topicId String
  topic   Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade)

  @@id([deckId, topicId])
}

model Topic {
  id          String      @id @default(cuid())
  title       String      @unique
  description String?
  decks       DeckTopic[]
}

model Card {
  id       String @id @default(cuid())
  question String
  answer   String
  deckId   String
  deck     Deck   @relation(fields: [deckId], references: [id], onDelete: Cascade)
}
