import { type NextPage } from 'next'
import { signIn, signOut, useSession } from 'next-auth/react'
import Head from 'next/head'
import Link from 'next/link'

import { Header } from '~/components/header'
import { trpc } from '~/utils/trpc'

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: 'from tRPC' })

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main className='flex min-h-screen flex-col items-center justify-center bg-primary-50'>
        <div className='container flex flex-col items-center justify-center gap-12 px-4 py-16 '>
          <h1 className='text-white text-5xl font-extrabold tracking-tight sm:text-[5rem]'>
            Create <span className='text-primary-900'>T3</span> App
          </h1>
          <div className='grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8'>
            <Link
              className='flex max-w-xs flex-col rounded-xl border-2 border-primary-900 p-4'
              href='https://create.t3.gg/en/usage/first-steps'
              target='_blank'
            >
              <h3 className='text-2xl font-bold'>First Steps →</h3>
              <div className='text-lg'>
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className='flex max-w-xs flex-col rounded-xl border-2 border-primary-900 p-4'
              href='https://create.t3.gg/en/introduction'
              target='_blank'
            >
              <h3 className='text-2xl font-bold'>Documentation →</h3>
              <div className='text-lg'>
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className='flex flex-col items-center gap-2'>
            <p className='text-2xl text-primary-900'>
              {hello.data ? hello.data.greeting : 'Loading tRPC query...'}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  )
}

export default Home

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession()

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined,
    { enabled: sessionData?.user !== undefined },
  )

  return (
    <div className='flex flex-col items-center justify-center gap-4'>
      <p className='text-center text-2xl text-primary-900'>
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className='rounded-full bg-primary-900 px-10 py-3 font-semibold text-primary-50 no-underline transition hover:shadow-lg'
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>
  )
}
